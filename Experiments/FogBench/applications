#!/bin/bash

# remove docker images and contianers
function remove_docker_images_and_containers {
	docker stop $(docker ps -aq)
	docker rm $(docker ps -aq)
	docker rmi $(docker images -q)
}

# build ipokemon image on cloud only or edge only platform
function build_docker_ipokemon {
	# echo Removing docker images and containers...
	# remove_docker_images_and_containers
	# echo -n DONE removing d

	echo Entering ipokemonbuild...
	mkdir ipokemonbuild
	cd ipokemonbuild

	echo Pulling down ipokemon docker file...
	sudo git init 
	sudo git remote add -f csc4006-EdgeBenchmarking https://gitlab.eeecs.qub.ac.uk/40126401/csc4006-EdgeBenchmarking.git
	sudo git config core.sparsecheckout true
	echo Experiments/iPokeMon/docker/ >> .git/info/sparse-checkout
	sudo git pull https://gitlab.eeecs.qub.ac.uk/40126401/csc4006-EdgeBenchmarking.git master
	
	echo Experiments/iPokeMon/docker...
	cd Experiments/iPokeMon/docker

	echo Building iPokeMon docker image...
	chmod 777 execute.sh
	time . build.sh 
	echo -n DONE building iPokeMon docker container
}

# run and enter ipokemon container on cloud only or edge only platform
function run_docker_ipokemon {
	echo -n Running ipokemon docker container...
	chmod 777 enter.sh
	./enter.sh
	echo -n DONE entering iPokeMon docker container
}

function run_docker_app {

	eval path="$1"
	eval applicationname="$2"
	eval runscript="$3"
	eval currentapp="$4"
	eval currentplatform="$5"

	cd ${path}
	
	echo -n Running ${applicationname} container...

	. ${runscript} ${currentapp} ${currentplatform}
	
	echo -n DONE running ${applicationname}
}

# utility function to print sepeartor/formatter line
function seperator {
echo -e "*****************************************************************************" | tee -a $filename.txt
}

# run the application script on the cloud for the cloud/edge pipeline
function bothcloudbench {
	echo "Cloud/Edge - Cloud applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_app "bothcloudyolobuild/Experiments/YOLO/bothclouddocker" "YOLO-Edge/Cloud-Cloud-instance" "run.sh" "0" "1"
	test $run_psphinx && run_docker_app "bothcloudpsphinxbuild/Experiments/PocketSphinx/bothclouddocker" "PocketSphinx-Edge/Cloud-Cloud-instance" "run.sh" "1" "1"
	test $run_aeneas && run_docker_app "bothcloudaeneasbuild/Experiments/Aeneas/bothclouddocker" "Aeneas-Edge/Cloud-Cloud-instance" "run.sh" "2" "1"
	
}

# run the application script on the edge for the cloud/edge pipeline
function bothedgebench {
	echo "Cloud/Edge - Edge applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_app "bothedgeyolobuild/Experiments/YOLO/bothedgedocker" "YOLO-Edge/Cloud-Edge-instance" "runedge.sh" "0" "2"
	test $run_psphinx && run_docker_app "bothedgepsphinxbuild/Experiments/PocketSphinx/bothedgedocker" "PocketSphinx-Edge/Cloud-Edge-instance" "runedge.sh" "1" "2"
	test $run_aeneas && run_docker_app "bothedgeaeneasbuild/Experiments/Aeneas/bothedgedocker" "Aeneas-Edge/Cloud-Edge-instance" "runedge.sh" "2" "2"
	
}

# run the application script on the edge for the edge only pipeline
function edgebench {
	echo "Edge applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_app "yolobuild/Experiments/YOLO/docker" "YOLO" "runedge.sh" "0" "0"
	test $run_psphinx && run_docker_app "psphinxbuild/Experiments/PocketSphinx/docker" "PocketSphinx" "runedge.sh" "1" "0"
	test $run_aeneas && run_docker_app "aeneasbuild/Experiments/Aeneas/docker" "Aeneas" "runedge.sh" "2" "0"
	test $run_ipokemon && run_docker_ipokemon
	test $run_foglamp && run_docker_app "foglampbuild/Experiments/FogLAMP/docker" "FogLAMP" "runedge.sh" "3" "0"

}

# run the application script on the cloud for the cloud only pipeline
function cloudbench {
	echo "Cloud applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_app "yolobuild/Experiments/YOLO/docker" "YOLO" "run.sh" "0" "0"
	test $run_psphinx && run_docker_app "psphinxbuild/Experiments/PocketSphinx/docker" "PocketSphinx" "run.sh" "1" "0"
	test $run_aeneas && run_docker_app "aeneasbuild/Experiments/Aeneas/docker" "Aeneas" "run.sh" "2" "0"
	test $run_ipokemon && run_docker_ipokemon
	test $run_foglamp && run_docker_app "foglampbuild/Experiments/FogLAMP/docker" "FogLAMP" "run.sh" "3" "0"

}

# applications main function
function main {
	cd defog  # navigate to the defog folder (for defog benchmarks)
	#cd defog  # navigate to the defog folder (for defog benchmarks)
	chmod 400 configs
	
	# determine what function to call based on user input
    test $run_cloud && cloudbench
    test $run_edge && edgebench
	test $run_both_cloud && bothcloudbench
    test $run_both_edge && bothedgebench
}

# accept user input passed by defog bash script
while getopts :cebz:adfsxulhngs:yipjmk opt; do
    case "$opt" in
        a)
            run_downloads=true
		    run_unixbench=true
			run_sysbench=true
			run_simple=true
            ;;
		c)
			run_cloud=true
			;;
		b)
			run_both_edge=true
			;;
		e)
			run_edge=true
			;;
        d)
            run_downloads=true
            ;;
        f)
            
            ;;
		s) 	
			run_sysbench=true
			;;
        x)
            run_delete=true
            ;;
		u)
            run_unixbench=true
            ;;
		g)	
			run_simple=true
			;;
		n)
			;;	
		z)
			run_both_cloud=true
			;;
		i)	
			build_ipokemon=true
			run_ipokemon=true
			;;
		l)	
			run_foglamp=true
			;;		
		j)	
			run_aeneas=true
			;;	
		k)	
			run_ipokemon=true
			;;	
		p)	
			run_psphinx=true
			;;	
		y)
            run_yolo=true
            ;;	
		m)
			;;
        ?)
            HELP
            exit 2
            ;;
    esac
done

main
