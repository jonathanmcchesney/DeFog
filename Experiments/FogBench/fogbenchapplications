#!/bin/bash

function remove_docker_images_and_containers {
	docker stop $(docker ps -aq)
	docker rm $(docker ps -aq)
	docker rmi $(docker images -q)
}

function build_docker_ipokemon {
	echo Removing docker images and containers...
	remove_docker_images_and_containers
	echo DONE

	echo Entering ipokemonbuild...
	mkdir ipokemonbuild
	cd ipokemonbuild

	echo Pulling down ipokemon docker file...
	sudo git init 
	sudo git remote add -f csc4006-EdgeBenchmarking https://gitlab.eeecs.qub.ac.uk/40126401/csc4006-EdgeBenchmarking.git
	sudo git config core.sparsecheckout true
	echo Experiments/iPokeMon/docker/ >> .git/info/sparse-checkout
	sudo git pull https://gitlab.eeecs.qub.ac.uk/40126401/csc4006-EdgeBenchmarking.git master
	
	echo Experiments/iPokeMon/docker...
	cd Experiments/iPokeMon/docker

	echo Building iPokeMon docker image...
	chmod 777 execute.sh
	time . build.sh 
	echo DONE	
}

function run_docker_ipokemon {
	echo -n Running ipokemon docker container...
	chmod 777 enter.sh
	./enter.sh
	echo -n DONE
}

function run_docker_psphinx_both_edge {
	cd bothedgepshinxbuild/Experiments/PocketSphinx/bothedgedocker
	
	echo -n Running bothedgedocker container...

	. runedge.sh
	
	echo -n DONE
}

function run_docker_psphinx_both_cloud {
	cd bothcloudpsphinxbuild/Experiments/PocketSphinx/bothclouddocker
	
	echo -n Running bothclouddocker container...

	. run.sh
	
	echo -n DONE
}

function run_docker_psphinx {
	cd psphinxbuild/Experiments/PocketSphinx/docker

	echo -n Running psphinx docker container...
	if [ "$run_cloud" ];
	then
		echo in here
		. run.sh
	fi	
	if [ "$run_edge" ];
	then
		. runedge.sh
	fi	
	echo -n DONE
}

function run_docker_yolo_both_edge {
	cd bothedgeyolobuild/Experiments/YOLO/bothedgedocker
	
	echo -n Running bothedgedocker container...

	. runedge.sh
	
	echo -n DONE
}

function run_docker_yolo_both_cloud {
	cd bothcloudyolobuild/Experiments/YOLO/bothclouddocker
	
	echo -n Running bothclouddocker container...

	. run.sh
	
	echo -n DONE
}

function run_docker_yolo { 
	cd yolobuild/Experiments/YOLO/docker

	echo -n Running yolo docker container...
	if [ "$run_cloud" ];
	then
		. run.sh
	fi	
	if [ "$run_edge" ];
	then
		. runedge.sh
	fi
	echo -n DONE
}


function run_docker_aeneas_both_edge {
	cd bothedgeaeneasbuild/Experiments/Aeneas/bothedgedocker
	
	echo -n Running bothedgedocker container...

	. runedge.sh
	
	echo -n DONE
}

function run_docker_aeneas_both_cloud {
	cd bothcloudaeneasbuild/Experiments/Aeneas/bothclouddocker
	
	echo -n Running bothclouddocker container...

	. run.sh
	
	echo -n DONE
}

function run_docker_aeneas { 
	cd aeneasbuild/Experiments/Aeneas/docker

	echo -n Running aeneas docker container...
	if [ "$run_cloud" ];
	then
		echo in here
		. run.sh
	fi	
	if [ "$run_edge" ];
	then
		. runedge.sh
	fi	
	echo -n DONE
}

function seperator {
echo -e "*****************************************************************************" | tee -a $filename.txt
}

function HELP {
    cat <<HELP
Help: benchmarker [OPTION...]

-a Benchmark all processes
-c Benchmark YOLO
-d Benchmark only small and large weight downloads
-f Create large weights file
-s Run sysbench CPU benchmark
-u Run UnixBench
-x Delete temporary files
HELP
}

function bothcloudbench {
	echo "Cloud/Edge - Cloud applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_yolo_both_cloud
	test $run_psphinx && run_docker_psphinx_both_cloud
	test $run_aeneas && run_docker_aeneas_both_cloud
	
}

function bothedgebench {
	echo "Cloud/Edge - Edge applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_yolo_both_edge
	test $run_psphinx && run_docker_psphinx_both_edge
	test $run_aeneas && run_docker_aeneas_both_edge
	
}

function edgebench {
	echo "Edge applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_yolo
	test $run_psphinx && run_docker_psphinx
	test $run_aeneas && run_docker_aeneas
	test $run_ipokemon && run_docker_ipokemon

}

function cloudbench {
	echo "Cloud applications benchmarks: " | tee $filename.txt
	seperator
	
	test $run_yolo && run_docker_yolo
	test $run_psphinx && run_docker_psphinx
	test $run_aeneas && run_docker_aeneas
	test $run_ipokemon && run_docker_ipokemon

}

function main {
	cd fogbench 
	
	echo $run_both_cloud
	echo $run_both_edge
	
    test $run_cloud && cloudbench
    test $run_edge && edgebench
	test $run_both_cloud && bothcloudbench
    test $run_both_edge && bothedgebench
}

while getopts :cebz:adfsxulhngs:yipjmk opt; do
    case "$opt" in
        a)
            run_downloads=true
		    run_unixbench=true
			run_sysbench=true
			run_simple=true
            ;;
		c)
			run_cloud=true
			;;
		b)
			run_both_edge=true
			;;
		e)
			run_edge=true
			;;
        d)
            run_downloads=true
            ;;
        f)
            
            ;;
		s) 	
			run_sysbench=true
			;;
        x)
            run_delete=true
            ;;
		u)
            run_unixbench=true
            ;;
		g)	
			run_simple=true
			;;
		n)
			;;	
		z)
			run_both_cloud=true
			;;
		i)	
			build_ipokemon=true
			run_ipokemon=true
			;;
		l)	
			run_foglamp=true
			;;		
		j)	
			run_aeneas=true
			;;	
		k)	
			run_ipokemon=true
			;;	
		p)	
			run_psphinx=true
			;;	
		y)
            run_yolo=true
            ;;	
		m)
			;;
        ?)
            HELP
            exit 2
            ;;
    esac
done

main
